{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactList/ContactListItem-fade.module.css","components/Notification/Notification.module.css","components/Container/Container.js","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebookOperations.js","redux/phonebook/phonebookSelectors.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","components/Form/Form.js","components/Filter/Filter.js","components/AppName/AppName.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","filterContacts","axios","defaults","baseURL","addContact","name","number","dispatch","contactActions","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","toLowerCase","includes","getLoading","loading","getContactById","contactId","find","connect","ownProps","item","contactsSelectors","onDeleteContact","contactOperations","console","log","ListItem","button","type","onClick","length","TransitionGroup","component","List","map","CSSTransition","timeout","classNames","fadeStyles","Notification","message","Form","notification","notificationIsVisible","handleInputChange","e","currentTarget","value","setState","handleSubmit","props","preventDefault","some","onAddContact","reset","alert","this","in","unmountOnExit","onEntered","form","autoComplete","onSubmit","label","labelName","required","input","placeholder","onChange","Component","mapDispatchToProps","conntactOperations","target","AppName","appear","App","onFetchContacts","isLoading","isLoadingContact","contactSelectors","createReducer","contactsActions","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8085d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"labelName\":\"Form_labelName__2L7Gh\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__20gyh\",\"ListItem\":\"ContactList_ListItem__vxGfb\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"labelName\":\"Filter_labelName__3VI7p\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListItem-fade_enter__3L9LC\",\"enterActive\":\"ContactListItem-fade_enterActive__3juOu\",\"exit\":\"ContactListItem-fade_exit__2OvWU\",\"exitActive\":\"ContactListItem-fade_exitActive__1R0L4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vzo1\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addContactRequest = createAction('contacts/addRequest');\nconst addContactSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst removeContactRequest = createAction('contacts/removeRequest');\nconst removeContactSuccess = createAction('contacts/removeSuccess');\nconst removeContactError = createAction('contacts/removeError');\n\nconst filterContacts = createAction('contacts/filter');\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  filterContacts,\n};\n","import contactActions from './phonebook-actions';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:2000';\nconst addContact = ({ name, number }) => dispatch => {\n  dispatch(contactActions.addContactRequest());\n  axios\n    .post('/contacts', { name, number })\n    .then(({ data }) => {\n      dispatch(contactActions.addContactSuccess(data));\n    })\n    .catch(error => dispatch(contactActions.addContactError()));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactActions.fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(contactActions.fetchContactsSuccess(data)))\n\n    .catch(error => dispatch(contactActions.fetchContactsError(error)));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactActions.removeContactRequest());\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(contactActions.removeContactSuccess(id)))\n\n    .catch(error => dispatch(contactActions.removeContactError(error)));\n};\n\nexport default { addContact, fetchContacts, removeContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\n\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  },\n);\n\nconst getContactById = createSelector(\n  [(state, contactId) => contactId, getContacts],\n  (contactId, contacts) => contacts.find(contact => contact.id === contactId),\n);\n\nexport default {\n  getContacts,\n  getLoading,\n  getFilter,\n  getContactById,\n  getFilteredContacts,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport contactOperations from '../../redux/phonebook/phonebookOperations';\nimport contactsSelectors from '../../redux/phonebook/phonebookSelectors';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.ListItem} key={id}>\n      <p>\n        {name} : {number}\n      </p>\n      <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\n        Удалить\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nconst mapState = (state, ownProps) => {\n  const item = contactsSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onDeleteContact: () => {\n    dispatch(contactOperations.removeContact(ownProps.id));\n    console.log(ownProps.id);\n  },\n});\nexport default connect(mapState, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport fadeStyles from './ContactListItem-fade.module.css';\nimport contactsSelectors from '../../redux/phonebook/phonebookSelectors';\n\nconst ContactList = ({ contacts }) => {\n  return (\n    contacts.length > 0 && (\n      <TransitionGroup component=\"ul\" className={styles.List}>\n        {contacts.map(({ id }) => (\n          <CSSTransition key={id} timeout={250} classNames={fadeStyles}>\n            <ContactItem id={id} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    )\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n});\nexport default connect(mapStateToProps)(ContactList);\n","import React from 'react';\nimport styles from './Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={styles.Notification}>\n      <p>{message}</p>\n    </div>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\nimport { connect } from 'react-redux';\nimport conntactOperations from '../../redux/phonebook/phonebookOperations';\nimport Notification from '../Notification';\nimport { CSSTransition } from 'react-transition-group';\nimport './Form-notification.css';\nimport contactsSelectors from '../../redux/phonebook/phonebookSelectors';\n\nclass Form extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    notification: '',\n    notificationIsVisible: false,\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    const contacts = this.props.contacts;\n\n    e.preventDefault();\n\n    if (name === '') {\n      alert('Please, give a name for new contact');\n      return;\n    }\n    if (number === '') {\n      alert('Please, add a number');\n      return;\n    }\n    if (\n      contacts.some(contact => {\n        return name.toLowerCase() === contact.name.toLowerCase();\n      })\n    ) {\n      this.setState({\n        notification: `Contact \"${name}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    if (\n      contacts.some(contact => {\n        return number === contact.number;\n      })\n    ) {\n      this.setState({\n        notification: `Number \"${number}\" is already exist`,\n        notificationIsVisible: true,\n      });\n      return;\n    }\n\n    this.props.onAddContact({ name, number });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { notification, notificationIsVisible } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={notificationIsVisible}\n          timeout={3000}\n          classNames=\"Notification-slideIn\"\n          unmountOnExit\n          onEntered={() => this.setState({ notificationIsVisible: false })}\n        >\n          <Notification message={notification} />\n        </CSSTransition>{' '}\n        <form\n          className={styles.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={styles.label}>\n            <p className={styles.labelName}>Name:&#42;</p>\n            <input\n              required\n              className={styles.input}\n              type=\"text\"\n              placeholder=\"ex. Anastasia Boyko\"\n              value={this.state.name}\n              name=\"name\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label className={styles.label}>\n            <p className={styles.labelName}>Number:&#42;</p>\n            <input\n              required\n              className={styles.input}\n              type=\"number\"\n              placeholder=\"ex. 0961179998\"\n              value={this.state.number}\n              name=\"number\"\n              onChange={this.handleInputChange}\n            />\n          </label>\n\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\nconst mapDispatchToProps = {\n  onAddContact: conntactOperations.addContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/phonebook/phonebook-actions';\nimport contactsSelectors from '../../redux/phonebook/phonebookSelectors';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      <p className={styles.labelName}>Find contact by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        placeholder=\"Name\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      ></input>\n    </label>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChange: contactActions.filterContacts,\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './AppName.css';\n\nconst AppName = () => {\n  return (\n    <CSSTransition\n      in={true}\n      appear={true}\n      timeout={250}\n      classNames=\"AppName-slideIn\"\n      unmountOnExit\n    >\n      <h2>Phonebook</h2>\n    </CSSTransition>\n  );\n};\n\nexport default AppName;\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport ContactList from \"./components/ContactList\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport AppName from \"./components/AppName\";\nimport \"./App.css\";\nimport contactOperations from \"./redux/phonebook/phonebookOperations\";\nimport { connect } from \"react-redux\";\nimport contactSelectors from \"./redux/phonebook/phonebookSelectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    return (\n      <Container>\n        <AppName />\n        <Form />\n        <Filter />\n        <h2>Contacts</h2>\n        {this.props.isLoading && <h2>Loading...</h2>}\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContact: contactSelectors.getLoading(state),\n});\nconst mapDispatchToProps = {\n  onFetchContacts: contactOperations.fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './phonebook-actions';\n\nconst addContact = (state, { payload }) => [...state, payload];\n\nconst deleteContact = (state, { payload }) => {\n  return state.filter(({ id }) => id !== payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (state, { payload }) => payload,\n  [contactsActions.addContactSuccess]: addContact,\n  [contactsActions.removeContactSuccess]: deleteContact,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.filterContacts]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.removeContactRequest]: () => true,\n  [contactsActions.removeContactSuccess]: () => false,\n  [contactsActions.removeContactError]: () => false,\n});\nexport default combineReducers({\n  items,\n  loading,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}